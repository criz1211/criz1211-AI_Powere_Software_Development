{"ast":null,"code":"var _jsxFileName = \"/Users/buvikrishna/Documents/Project/project/task-manager-app/task-manager-app/frontend/src/components/TaskList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getTasks } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const data = await getTasks();\n        setTasks(data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Due Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.dueDate ? new Date(task.dueDate).toLocaleDateString() : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)]\n        }, task._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"suOgpW3t2nMZzUgwyaGqSRlDRtE=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","getTasks","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","loading","setLoading","fetchTasks","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","title","description","status","dueDate","Date","toLocaleDateString","_id","_c","$RefreshReg$"],"sources":["/Users/buvikrishna/Documents/Project/project/task-manager-app/task-manager-app/frontend/src/components/TaskList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getTasks } from '../services/api';\n\nconst TaskList = () => {\n    const [tasks, setTasks] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchTasks = async () => {\n            try {\n                const data = await getTasks();\n                setTasks(data);\n            } catch (error) {\n                console.error('Error fetching tasks:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchTasks();\n    }, []);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div>\n            <h2>Task List</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Title</th>\n                        <th>Description</th>\n                        <th>Status</th>\n                        <th>Due Date</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {tasks.map(task => (\n                        <tr key={task._id}>\n                            <td>{task.title}</td>\n                            <td>{task.description}</td>\n                            <td>{task.status}</td>\n                            <td>{task.dueDate ? new Date(task.dueDate).toLocaleDateString() : ''}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default TaskList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}